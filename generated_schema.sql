create table producer (id bigint generated by default as identity, address varchar(255), city varchar(255), first_name varchar(255), last_name varchar(255), state varchar(255), primary key (id));
create table singer (id bigint generated by default as identity, address varchar(255), city varchar(255), first_name varchar(255), last_name varchar(255), state varchar(255), primary key (id));
create table singer_song (singer_id bigint not null, song_id bigint not null);
create table song (length float(53), id bigint generated by default as identity, producer_id bigint, name varchar(255), primary key (id));
alter table if exists singer_song add constraint FKe2mx4py15ghqjli00lilg1xcf foreign key (singer_id) references singer;
alter table if exists singer_song add constraint FK4bpue3qgplxo25e96ro0oc1jl foreign key (song_id) references song;
alter table if exists song add constraint FKmrlpmfwbt7bn7thtoxasbprdy foreign key (producer_id) references producer;
INSERT INTO PRODUCER(ID, FIRST_NAME, LAST_NAME, CITY, ADDRESS, STATE) VALUES ('Nile', 'Rogers', 'New-york', 'Azza', 'Israel');
INSERT INTO SINGER(ID, FIRST_NAME, LAST_NAME, CITY, ADDRESS, STATE) VALUES ('Bob', 'Dylan', 'Migdal', 'Azza', 'Israel');
INSERT INTO SINGER(ID, FIRST_NAME, LAST_NAME) VALUES ('Bob', 'Marley');
INSERT INTO SINGER(ID, FIRST_NAME, LAST_NAME) VALUES ('Josh', 'Dylan');
INSERT INTO SONG(ID, NAME, LENGTH, PRODUCER_ID) VALUES ('the dylan song', 2.3, 1);
INSERT INTO SONG(ID, NAME, LENGTH) VALUES ('Big brown eyes', 2.3);
INSERT INTO SINGER_SONG(SINGER_ID, SONG_ID) VALUES (1, 1);
INSERT INTO SINGER_SONG(SINGER_ID, SONG_ID) VALUES (3, 1);
INSERT INTO SINGER_SONG(SINGER_ID, SONG_ID) VALUES (2, 2);
